version: '3.8'
services:
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: q
    volumes:
      - ~/DockerVolumes/twitter/postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.2
    container_name: keycloak
    ports:
      - "8085:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: "start-dev --db postgres --db-url-host postgres --db-username postgres --db-password q"
    restart: always

  elasticsearch:
    image: bitnami/elasticsearch:8.11.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - ~/DockerVolumes/twitter/elastic:/bitnami/elasticsearch/data
    restart: always

  kibana:
    image: bitnami/kibana:8.11.3
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ~/DockerVolumes/twitter/kibana:/bitnami/kibana
    restart: always
    depends_on:
      - elasticsearch

  logstash:
    image: bitnami/logstash:8.11.3
    container_name: logstash
    ports:
      - "5602:5602"
    volumes:
      - ./logstash/logstash.conf:/bitnami/logstash/pipeline/logstash.conf
    restart: always
    depends_on:
      - elasticsearch

  jaeger:
    image: jaegertracing/all-in-one:1.63.0
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true